# Define a 'Service' To Expose MySQL to Other Services
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  labels:
    app: postgresql
    tier: database
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgresql
    tier: database
  clusterIP: None # DNS is used, so clusterIP is not needed

---
# Define a 'Persistent Volume Claim'(PVC) for MySQL Storage, dynamically provisioned by cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  labels:
    app: postgresql
    tier: database
spec:
  accessModes:
    - ReadWriteOnce   #This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 1Gi    #This will tell kubernetes about the amount of space we are trying to claim.

---

# Deployment specification begins here
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  labels:
    app: postgresql
    tier: database
spec:
  selector:
    matchLabels:
      app: postgresql
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: postgresql
        tier: database
    spec:
      containers:
        - image: postgres:12.4
          name: postgresql
          env:
            - name: POSTGRES_PASSWORD
              value: nikola
            - name: POSTGRES_DB
              value: postgres
          ports:
            - containerPort: 5432
              name: postgresql
          volumeMounts:
            - name: postgres-persistent-storage
              mountPath: /d/FAX/VI_Semestar/KIII/data
      volumes:
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pvc